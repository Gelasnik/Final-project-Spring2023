{
    "GNN_DATA": {
        "edges": [
            {
                "dst": "loopSeerDum",
                "src": "4268643_root"
            }
        ],
        "nodes": [
            {
                "block_addr": 4268643,
                "constraints": [
                    [
                        0,
                        []
                    ]
                ],
                "instructions": "push|rbp|    |mov|rbp|rsp|    |mov|qword|ptr|rbp|-|8|rdi|    |mov|qword|ptr|rbp|-|0x10|rsi|    |mov|dword|ptr|rbp|-|0x14|edx|    |mov|qword|ptr|rbp|-|0x20|rcx|    |mov|qword|ptr|rbp|-|0x28|reg|    |mov|dword|ptr|rbp|-|0x18|regd|    |mov|rax|qword|ptr|rbp|-|8|    |mov|rdx|qword|ptr|rbp|-|0x10|    |mov|qword|ptr|rax|rdx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|rdx|qword|ptr|rbp|-|0x20|    |mov|qword|ptr|rax|+|8|rdx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rbp|-|0x14|    |mov|dword|ptr|rax|+|0x10|edx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|rdx|qword|ptr|rbp|-|0x28|    |mov|qword|ptr|rax|+|0x18|rdx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rbp|-|0x18|    |mov|dword|ptr|rax|+|0x20|edx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rbp|+|0x10|    |mov|dword|ptr|rax|+|0x24|edx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|edx|dword|ptr|rbp|+|0x18|    |mov|dword|ptr|rax|+|0x28|edx|    |mov|rax|qword|ptr|rbp|-|8|    |mov|dword|ptr|rax|+|0x2c|0|    |mov|rax|qword|ptr|rbp|-|8|    |mov|rdx|qword|ptr|rbp|+|0x20|    |mov|qword|ptr|rax|+|0x30|rdx|    |nop|    |pop|rbp|    |ret|    ",
                "key": "4268643_root",
                "path_num": -1
            },
            {
                "block_addr": "loopSeerDum",
                "constraints": [
                    [
                        1,
                        [
                            "<Bool __eq__(reg_48_8651_64, 0xffffffffffffffff)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x8), 0x7)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x10), 0xf)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x18), 0x17)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x20), 0x1f)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x24), 0x23)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x28), 0x27)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x2c), 0x2b)>",
                            "<Bool __eq__(__add__(reg_48_8651_64, 0x30), 0x2f)>",
                            "<BV32 Extract(31, 0, reg_48_8651_64)>"
                        ]
                    ]
                ],
                "instructions": "no_instructions",
                "key": "loopSeerDum",
                "path_num": 0
            }
        ]
    },
    "func_name": "adns__findlabel_start"
}